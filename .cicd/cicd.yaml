apiVersion: v1
kind: Namespace
metadata:
  name: repo-pipeline
  labels:
    env: test
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: check-for-changes
  namespace: repo-pipeline
spec:
  params:
    - name: sha
      type: string
    - name: repoURL
      type: string
  results:
    - name: changed
      description: Returns value only if changes were found
  steps:
    - name: check-for-changes
      image: bitnami/kubectl
      script: |
        #!/bin/sh
        cd usr
        git clone $(params.repoURL) repo
        cd repo
        git diff --no-commit-id --name-only -r $(params.sha) >> changes.txt
        egrep '^\.cicd' changes.txt
        if egrep -q '^\.cicd' changes.txt
        then
          echo -n "Changes found" >> $(results.changed.path)
        fi
        echo $(results.changed.path)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: yaml-updater
  namespace: repo-pipeline
spec:
  params:
    - name: sha
      type: string
    - name: repoURL
      type: string
  steps:
    - name: yaml-updater
      image: bitnami/kubectl
      script: |
        #!/bin/sh
        cd usr
        git clone $(params.repoURL) repo
        cd repo
        kubectl apply -f .cicd
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: get-nodes
  namespace: repo-pipeline
spec:
  params:
  - name: sha
    type: string
    description: "the SHA of the recently detected change"
  - name: repoURL
    type: string
    description: "the cloneURL that the change was detected in"
  tasks:
  - name: check-changes
    params:
    - name: sha
      value: $(params.sha)
    - name: repoURL
      value: $(params.repoURL)
    taskRef:
      name: check-changes
  - name: yaml-updater
    when: 
      - input: $(tasks.check-changes.results.changed)
        operator: notin
        values: ["Changes not found"]
    params:
    - name: sha
      value: $(params.sha)
    - name: repoURL
      value: $(params.repoURL)
    taskRef:
      name: yaml-updater
  results:
    - name: changed
      description: checks if changed
      value: $(tasks.check-changes.results.changed)
---
apiVersion: polling.tekton.dev/v1alpha1
kind: Repository
metadata:
  name: github-listener
  namespace: repo-pipeline
  labels:
    name: test
spec:
  url: https://github.com/holy-tech/discord-roulette.git
  ref: feat/cicd-tekton
  frequency: 1m
  type: github
  pipelineRef:
    name: get-nodes
    params:
    - name: sha
      expression: commit.sha
    - name: repo
      expression: repoURL
